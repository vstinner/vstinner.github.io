<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Victor Stinner blog 3 - linux</title><link href="https://vstinner.github.io/" rel="alternate"></link><link href="https://vstinner.github.io/feeds/linux.atom.xml" rel="self"></link><id>https://vstinner.github.io/</id><updated>2019-10-10T17:00:00+02:00</updated><entry><title>Graphics bugs in Firefox and GNOME</title><link href="https://vstinner.github.io/graphics-bugs-firefox-gnome.html" rel="alternate"></link><published>2019-10-10T17:00:00+02:00</published><updated>2019-10-10T17:00:00+02:00</updated><author><name>Victor Stinner</name></author><id>tag:vstinner.github.io,2019-10-10:/graphics-bugs-firefox-gnome.html</id><summary type="html">&lt;p&gt;After explaining how to &lt;a class="reference external" href="https://vstinner.github.io/debug-hybrid-graphics-issues-linux.html"&gt;Debug Hybrid Graphics issues on Linux&lt;/a&gt;, here is the story of four graphics bugs
that I had in GNOME and Firefox on my Fedora 30 between May 2018 and September
2019: bugs in gnome-shell, Gtk, Firefox and mutter.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://www.flickr.com/photos/34298393&amp;#64;N06/14488759356/"&gt;&lt;img alt="Glitch" src="https://vstinner.github.io/images/glitch.jpg" /&gt;&lt;/a&gt;
&lt;div class="section" id="gnome-shell-freezes"&gt;
&lt;h2&gt;gnome-shell freezes&lt;/h2&gt;
&lt;p&gt;In May 2018, six months after …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;After explaining how to &lt;a class="reference external" href="https://vstinner.github.io/debug-hybrid-graphics-issues-linux.html"&gt;Debug Hybrid Graphics issues on Linux&lt;/a&gt;, here is the story of four graphics bugs
that I had in GNOME and Firefox on my Fedora 30 between May 2018 and September
2019: bugs in gnome-shell, Gtk, Firefox and mutter.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://www.flickr.com/photos/34298393&amp;#64;N06/14488759356/"&gt;&lt;img alt="Glitch" src="https://vstinner.github.io/images/glitch.jpg" /&gt;&lt;/a&gt;
&lt;div class="section" id="gnome-shell-freezes"&gt;
&lt;h2&gt;gnome-shell freezes&lt;/h2&gt;
&lt;p&gt;In May 2018, six months after I got my Lenovo P50 laptop, gnome-shell was
&amp;quot;sometimes&amp;quot; freezing between 1 and 5 seconds. It was annoying because key
stokes created repeated keys writing &amp;quot;helloooooooooooooooooooooo&amp;quot; instead of
&amp;quot;hello&amp;quot; for example.&lt;/p&gt;
&lt;p&gt;My colleagues led my to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;#fedora-desktop&lt;/span&gt;&lt;/tt&gt; of the GIMP IRC server where I met
my colleague &lt;strong&gt;Jonas Ådahl&lt;/strong&gt; (jadahl) who almost immediately identified my
issue! Extract of the IRC chat:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
15:03 &amp;lt;vstinner&amp;gt; hello. i upgraded from F27 to F28, and it seems like I
    switched from Xorg to Wayland. sometimes, the desktop hangs a few
    milliseconds (less than 2 secondes)
15:03 &amp;lt;vstinner&amp;gt; bentiss told me that  &amp;quot;libinput error: client bug: timer
    event7 keyboard: offset negative (-39ms)&amp;quot; can occur when shell is too
    slow
15:04 &amp;lt;vstinner&amp;gt; journalctl shows me frenquently the bug
    https://gitlab.gnome.org/GNOME/gnome-shell/issues/1 &amp;quot;Object
    Shell.GenericContainer (0x559e6bfddc60), has been already finalized.
    Impossible to get any property from it.&amp;quot;
15:04 &amp;lt;vstinner&amp;gt; i also get &amp;quot;Window manager warning: last_user_time
    (3093467) is greater than comparison timestamp (3093466).  This most
    likely represents a buggy client sending inaccurate timestamps in
    messages such as _NET_ACTIVE_WINDOW.  Trying to work around...&amp;quot; errors
    in logs (from shell)
15:05 &amp;lt;vstinner&amp;gt; bentiss: ah, i also get &amp;quot;libinput error: client bug: timer
    event7 trackpoint: offset negative (-352ms)&amp;quot; errors
15:06 &amp;lt;vstinner&amp;gt; it's a recent laptop, Lenovo P50: 32 GB of RAM, 4 physical
    CPUs (8 threads) Intel(R) Core(TM) i7-6820HQ CPU &amp;#64; 2.70GHz
15:06 &amp;lt;vstinner&amp;gt; so. what can i do to debug such performance issue? may it
    come from shell? what does it mean if shell is slow? can it be a GPU
    issue?  a javascript issue?
...
15:13 &amp;lt;jadahl&amp;gt; vstinner: whats your hardware? Do you have a hybrid gpu
    system?
15:13 &amp;lt;jadahl&amp;gt; ah, yes P50
15:14 &amp;lt;jadahl&amp;gt; vstinner: there is a branch on mutter upstream that fixes
    that issue. want to compile it to test?
&lt;/pre&gt;
&lt;p&gt;Ten minutes after I asked my question, Jonas asked the right question: &lt;strong&gt;Do you
have a hybrid gpu system?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I was able to workaround the issue by connecting my laptop to my TV using the
HDMI port:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
15:22 &amp;lt; jadahl&amp;gt; for example, IIRC if you have a monitor connected to the
    HDMI, the issue will go away since the secondary GPU is always awake
    anyway
...
15:31 &amp;lt; vstinner&amp;gt; jadahl: i plugged a HDMI cable to my TV and it seems like
    the issue is gone
15:31 &amp;lt; vstinner&amp;gt; jadahl: impressive
&lt;/pre&gt;
&lt;p&gt;When an external monitor is used (like a TV plugged on the HDMI port), my
NVIDIA GPU is always active which works around the bug I had in gnome-shell.&lt;/p&gt;
&lt;p&gt;Jonas provided me a RPM package for Fedora including his work-in-progress fix:
&lt;a class="reference external" href="https://gitlab.gnome.org/GNOME/mutter/merge_requests/106"&gt;Upload HW cursor sprite on-demand&lt;/a&gt;. I confirmed that
this change fixed my bug. His mutter change has been merged upstream.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="firefox-crash-when-selecting-text"&gt;
&lt;h2&gt;Firefox crash when selecting text&lt;/h2&gt;
&lt;p&gt;In March 2019, Firefox with Wayland crashed on &lt;tt class="docutils literal"&gt;wl_abort()&lt;/tt&gt; when selecting
more than 4000 characters in a &lt;tt class="docutils literal"&gt;&amp;lt;textarea&amp;gt;&lt;/tt&gt;. I found the bug in Gmail when
selecting the whole email text to remove it. Pressing &lt;strong&gt;CTRL + A&lt;/strong&gt; or
Right-click + Select All &lt;strong&gt;crashed the whole Firefox process!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I reported the bug to Firefox: &lt;a class="reference external" href="https://bugzilla.mozilla.org/show_bug.cgi?id=1539773"&gt;Firefox with Wayland crash on wl_abort() when
selecting more than 4000 characters in a &amp;lt;textarea&amp;gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Running gdb in Firefox caused me some troubles since it's a very large binary with
many libraries. I also read &lt;a class="reference external" href="https://cgit.freedesktop.org/wayland/wayland-protocols/tree/unstable/text-input/text-input-unstable-v3.xml#n138"&gt;Wayland protocol specifications&lt;/a&gt;.
I managed to analyze the bug and so I reported the bug to Gtk as well, &lt;a class="reference external" href="https://gitlab.gnome.org/GNOME/gtk/issues/1783"&gt;On
Wayland, notify_surrounding_text() crash on wl_abort() if text is longer than
4000 bytes&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
According to gdb, &lt;tt class="docutils literal"&gt;wl_proxy_marshal_array_constructor_versioned()&lt;/tt&gt; calls
&lt;tt class="docutils literal"&gt;wl_abort()&lt;/tt&gt; because the buffer is too short. It seems like
&lt;tt class="docutils literal"&gt;wl_buffer_put()&lt;/tt&gt; fails with &lt;tt class="docutils literal"&gt;E2BIG&lt;/tt&gt;.&lt;/blockquote&gt;
&lt;p&gt;Quickly, I identified that &lt;strong&gt;my Gtk bug has already been fixed 3 months before
by Carlos Garnacho&lt;/strong&gt; (&lt;a class="reference external" href="https://gitlab.gnome.org/GNOME/gtk/merge_requests/438"&gt;imwayland: Respect maximum length of 4000 Bytes on
strings being sent&lt;/a&gt;)
and &lt;strong&gt;the fix is part of gtk-3.24.3&lt;/strong&gt; (&amp;quot;wayland: Respect length limits in text
protocol&amp;quot; says &amp;quot;Overview of Changes in GTK+ 3.24.3&amp;quot;).&lt;/p&gt;
&lt;p&gt;I requested to upgrade Gtk in Fedora. But it was not possible since the newer
version changed the theme. I was asked to cherry-pick the fix and that's what I
did: &lt;a class="reference external" href="https://src.fedoraproject.org/rpms/gtk3/pull-request/5"&gt;imwayland: Respect maximum length of 4000 Bytes on strings&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My PR was merged and a new package was built. I tested it and confirmed that it
fixed the crash: &lt;a class="reference external" href="ttps://bodhi.fedoraproject.org/updates/FEDORA-2019-d67ec97b0b"&gt;FEDORA-2019-d67ec97b0b&lt;/a&gt;. Soon, the
package was pushed to the public Fedora package repository.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;That's the cool part about open source: if you have the skills to hack the
code, you can fix an annoying which is affecting you!&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="firefox-wayland-window-partially-or-not-updated-when-switching-between-two-tabs"&gt;
&lt;h2&gt;Firefox: [Wayland] Window partially or not updated when switching between two tabs&lt;/h2&gt;
&lt;div class="section" id="analyze-the-bug"&gt;
&lt;h3&gt;Analyze the bug&lt;/h3&gt;
&lt;p&gt;In September 2019, after a large system upgrade (install 6 packages, upgrade
234 packages, remove 5 packages), Firefox started to not update the window
content sometimes when I switched from one tab to another. Example:&lt;/p&gt;
&lt;img alt="Firefox bug of window partially updated" src="https://vstinner.github.io/images/firefox_bug_1.jpg" /&gt;
&lt;p&gt;It took me a few hours to analyze the bug to be able to produce an useful bug
report.&lt;/p&gt;
&lt;p&gt;I followed Fedora's guide &lt;a class="reference external" href="https://fedoraproject.org/wiki/How_to_debug_Firefox_problems"&gt;How to debug Firefox problems&lt;/a&gt; advices.&lt;/p&gt;
&lt;p&gt;First, I tried to &lt;strong&gt;understand which GPU driver is used&lt;/strong&gt;. I finished by
blacklisting the nouveau driver in the Linux kernel, to ensure that Firefox was
using my Intel IGP. I still reproduced the bug.&lt;/p&gt;
&lt;p&gt;I &lt;strong&gt;disabled all Firefox extensions&lt;/strong&gt;: bug reproduced.&lt;/p&gt;
&lt;p&gt;Then I created a new Firefox profile and started Firefox in &lt;strong&gt;safe mode&lt;/strong&gt;: bug
reproduced.&lt;/p&gt;
&lt;p&gt;I tested the latest Firefox binary from mozilla.org (Firefox 69.0): bug
reproduced.&lt;/p&gt;
&lt;p&gt;Finally, &lt;strong&gt;I tested Firefox Nightly&lt;/strong&gt; from mozilla.org (Firefox 71.0a1): bug
reproduced.&lt;/p&gt;
&lt;p&gt;Ok, it was enough data to produce an interesting bug report. I reported
&lt;a class="reference external" href="https://bugzilla.mozilla.org/show_bug.cgi?id=1580152"&gt;[Wayland] Window partially or not updated when switching between two tabs&lt;/a&gt; to Firefox.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="identify-the-regression-using-fedora-packages"&gt;
&lt;h3&gt;Identify the regression using Fedora packages&lt;/h3&gt;
&lt;p&gt;Then I looked at &lt;tt class="docutils literal"&gt;/var/log/dnf.log&lt;/tt&gt; and I tried to identify which package
update could explain the regression.&lt;/p&gt;
&lt;p&gt;I downgraded &lt;strong&gt;gtk3&lt;/strong&gt;-3.24.11-1.fc30.x86_64 to gtk3.x86_64 3.24.10-1.fc30: bug
reproduced.&lt;/p&gt;
&lt;p&gt;I rebooted on oldest available &lt;strong&gt;Linux kernel&lt;/strong&gt;, version 5.2.8-200.fc30.x86_64:
bug reproduced. I checked journalctl logs to check which Linux version I was
running whhen the bug was first seen: Linux 5.2.9-200.fc30.x86_64.&lt;/p&gt;
&lt;p&gt;I don't know why, but &lt;strong&gt;downgrading Firefox was only my 3rd test&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I downgraded firefox-69.0-2.fc30.x86_64 to firefox-68.0.2-1.fc30.x86_64: the
bug is gone! Ok, so &lt;strong&gt;the regression comes from the Firefox package&lt;/strong&gt;, and it
was introduced between package versions 68.0.2-1.fc30 and 69.0-2.fc30.&lt;/p&gt;
&lt;p&gt;On IRC, I met my colleague &lt;strong&gt;Martin Stránský&lt;/strong&gt; who package Firefox for Fedora.
He told me that he is aware of my bug and may have a fix for my bug. Great!&lt;/p&gt;
&lt;p&gt;Only 9 days later, &lt;strong&gt;Martin Stránský&lt;/strong&gt; fix has been merged in Firefox upstream,
released in Firefox Nightly, and a new package has been shipped in Fedora 30!
Thanks Martin for your efficiency!&lt;/p&gt;
&lt;p&gt;The final Firefox change is quite large and intrusive: &lt;a class="reference external" href="https://hg.mozilla.org/releases/mozilla-beta/rev/3281a617f22b"&gt;[Wayland] Fix rendering
glitches on wayland&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="xwayland-crash-in-xwl-glamor-gbm-create-pixmap"&gt;
&lt;h2&gt;Xwayland crash in xwl_glamor_gbm_create_pixmap()&lt;/h2&gt;
&lt;p&gt;In September 2019, while I was debugging the previous Firefox bug, I started my
IRC client hexchat.  Suddently, &lt;strong&gt;Xwayland crashed which closed my whole Gnome
session&lt;/strong&gt;!  I was testing various GPU configurations to analyze the Firefox
bug.&lt;/p&gt;
&lt;p&gt;ABRT managed to rebuild an useless traceback and identified an existing bug
report. It added my coment to &lt;a class="reference external" href="https://bugzilla.redhat.com/show_bug.cgi?id=1729200#c20"&gt;[abrt] xorg-x11-server-Xwayland:
OsLookupColor(): Segmentation fault at address 0x28&lt;/a&gt; report.&lt;/p&gt;
&lt;p&gt;At July 26, 2019 (1 month before I got the bug), &lt;strong&gt;Olivier Fourdan&lt;/strong&gt; added &lt;a class="reference external" href="https://bugzilla.redhat.com/show_bug.cgi?id=1729200#c9"&gt;an
interesting comment&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;glamor_get_modifiers+0x767&lt;/tt&gt; is &lt;tt class="docutils literal"&gt;xwl_glamor_gbm_create_pixmap()&lt;/tt&gt; so this
is the same as &lt;a class="reference external" href="https://bugzilla.redhat.com/show_bug.cgi?id=1729925"&gt;bug 1729925&lt;/a&gt; fixed upstream with
&lt;a class="reference external" href="https://gitlab.freedesktop.org/xorg/xserver/merge_requests/242"&gt;xwayland: Do not free a NULL GBM bo&lt;/a&gt;.&lt;/blockquote&gt;
&lt;p&gt;So in fact, my bug was already fixed by &lt;strong&gt;Olivier Fourdan&lt;/strong&gt; in Xwayland
upstream, but the fix didn't land into Fedora yet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="thanks"&gt;
&lt;h2&gt;Thanks!&lt;/h2&gt;
&lt;p&gt;I would like to thank the following developers who fixed my Fedora 30. What a
coincidence, all four are my collagues! It seems like Red Hat is investing in
the Linux desktop :-)&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://blogs.gnome.org/carlosg/"&gt;Carlos Garnacho&lt;/a&gt; (Red Hat).&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://www.flickr.com/photos/183829480&amp;#64;N06/48623543091/in/pool-14662216&amp;#64;N23/"&gt;&lt;img alt="Carlos Garnacho" src="https://vstinner.github.io/images/carlos_garnacho.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;&lt;a class="reference external" href="https://gitlab.gnome.org/jadahl"&gt;Jonas Ådahl&lt;/a&gt; (Red Hat).&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://www.flickr.com/photos/183829480&amp;#64;N06/48623189663/in/pool-14662216&amp;#64;N23/"&gt;&lt;img alt="Jonas Ådahl" src="https://vstinner.github.io/images/jonas_adahl.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;&lt;a class="reference external" href="http://people.redhat.com/stransky/"&gt;Martin Stránský&lt;/a&gt; (Red Hat).&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://people.redhat.com/stransky/"&gt;&lt;img alt="Martin Stránský" src="https://vstinner.github.io/images/mstransky.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Olivier_Fourdan"&gt;Olivier Fourdan&lt;/a&gt; (Red Hat).&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://en.wikipedia.org/wiki/Olivier_Fourdan"&gt;&lt;img alt="Olivier Fourdan" src="https://vstinner.github.io/images/olivier_fourdan.jpg" /&gt;&lt;/a&gt;
&lt;/div&gt;
</content><category term="linux"></category><category term="linux"></category></entry><entry><title>Debug Hybrid Graphics issues on Linux</title><link href="https://vstinner.github.io/debug-hybrid-graphics-issues-linux.html" rel="alternate"></link><published>2019-09-11T15:50:00+02:00</published><updated>2019-09-11T15:50:00+02:00</updated><author><name>Victor Stinner</name></author><id>tag:vstinner.github.io,2019-09-11:/debug-hybrid-graphics-issues-linux.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Hybrid_graphics"&gt;Hybrid Graphics&lt;/a&gt; is a
complex hardware and software solution to achieve longer laptop battery life:
an &lt;strong&gt;integrated&lt;/strong&gt; graphics device is used by default, and a &lt;strong&gt;discrete&lt;/strong&gt;
graphics device with higher graphics performances is enabled on demand.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://www.theregister.co.uk/2010/02/09/inside_nvidia_optimus/"&gt;&lt;img alt="Hybrid Graphics" src="https://vstinner.github.io/images/hybrid_graphics.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;If it is designed and implemented carefully, users should not notice that a
laptop …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Hybrid_graphics"&gt;Hybrid Graphics&lt;/a&gt; is a
complex hardware and software solution to achieve longer laptop battery life:
an &lt;strong&gt;integrated&lt;/strong&gt; graphics device is used by default, and a &lt;strong&gt;discrete&lt;/strong&gt;
graphics device with higher graphics performances is enabled on demand.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://www.theregister.co.uk/2010/02/09/inside_nvidia_optimus/"&gt;&lt;img alt="Hybrid Graphics" src="https://vstinner.github.io/images/hybrid_graphics.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;If it is designed and implemented carefully, users should not notice that a
laptop has two graphical devices.&lt;/p&gt;
&lt;p&gt;Sadly, the Linux implementation is not perfect yet. I had to debug different
graphics issues on GNOME last months, so I decided to write down an article
about this technology.&lt;/p&gt;
&lt;p&gt;This article is about the &lt;strong&gt;GNOME&lt;/strong&gt; desktop environment with &lt;strong&gt;Wayland&lt;/strong&gt;
running on &lt;strong&gt;Fedora&lt;/strong&gt; 30, with Linux kernel &lt;strong&gt;vgaswitcheroo&lt;/strong&gt; in muxless mode
(more about that above).&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Hybrid Graphics&lt;/h2&gt;
&lt;p&gt;Hybrid Graphics are known under different names:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Linux kernel &lt;a class="reference external" href="https://www.kernel.org/doc/html/latest/gpu/vga-switcheroo.html"&gt;vgaswitcheroo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/PRIME"&gt;PRIME&lt;/a&gt; in Linux open source
GPU drivers (nouveau, ati, amdgpu and intel), the &amp;quot;muxless&amp;quot; flavor of hybrid graphics&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/bumblebee"&gt;Bumblebee&lt;/a&gt;:
&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/NVIDIA_Optimus"&gt;NVIDIA Optimus&lt;/a&gt;
for Linux&lt;/li&gt;
&lt;li&gt;&amp;quot;AMD Dynamic Switchable Graphics&amp;quot; for Radeon&lt;/li&gt;
&lt;li&gt;&amp;quot;Dual GPUs&amp;quot;&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nowadays, most manufacturers utilizes the &lt;strong&gt;muxless&lt;/strong&gt; model:&lt;/p&gt;
&lt;blockquote&gt;
Dual GPUs but &lt;strong&gt;only one of them is connected to outputs&lt;/strong&gt;. The other one
is merely used to &lt;strong&gt;offload rendering&lt;/strong&gt;, its results are copied over PCIe
into the framebuffer. On Linux this is supported with DRI PRIME.&lt;/blockquote&gt;
&lt;p&gt;In 2010, the first generation hybrid model used the &lt;strong&gt;muxed&lt;/strong&gt; model:&lt;/p&gt;
&lt;blockquote&gt;
Dual GPUs with a hardware multiplexer chip to switch outputs between GPUs.
This model makes the user choose (at boot time or at login time) between
the two power/graphics profiles and is almost fixed throughout the user
session.&lt;/blockquote&gt;
&lt;p&gt;Note: The development to support hybrid graphics in Linux started in 2010.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="does-my-linux-have-hybrid-graphics"&gt;
&lt;h2&gt;Does my Linux have Hybrid Graphics?&lt;/h2&gt;
&lt;p&gt;On Linux, Hybrid Graphics is used if the &lt;tt class="docutils literal"&gt;/sys/kernel/debug/vgaswitcheroo/&lt;/tt&gt;
directory exists.&lt;/p&gt;
&lt;p&gt;No Hybrid Graphics, single graphics device:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo cat /sys/kernel/debug/vgaswitcheroo/switch
cat: /sys/kernel/debug/vgaswitcheroo/switch: No such file or directory
&lt;/pre&gt;
&lt;p&gt;Hybrid Graphics with two graphics devices:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo cat /sys/kernel/debug/vgaswitcheroo/switch
0:IGD:+:Pwr:0000:00:02.0
1:DIS: :DynOff:0000:01:00.0
&lt;/pre&gt;
&lt;p&gt;Command to list graphics devices:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ lspci|grep VGA
00:02.0 VGA compatible controller: Intel Corporation HD Graphics 530 (rev 06)
01:00.0 VGA compatible controller: NVIDIA Corporation GM107GLM [Quadro M1000M] (rev a2)
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="hardware"&gt;
&lt;h2&gt;Hardware&lt;/h2&gt;
&lt;p&gt;My employer gave me a Lenovo P50 laptop to work in December 2017. It is my only
computer at home, so I needed a powerful laptop (even if it's heavy for
traveling to conferences). The CPU, RAM and battery are great, but the hybrid
graphics caused me some headaches.&lt;/p&gt;
&lt;p&gt;My Lenovo P50 has two GPUs:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ lspci|grep VGA
00:02.0 VGA compatible controller: Intel Corporation HD Graphics 530 (rev 06)
01:00.0 VGA compatible controller: NVIDIA Corporation GM107GLM [Quadro M1000M] (rev a2)
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The &lt;strong&gt;Integrated Graphics Device&lt;/strong&gt; is a &lt;strong&gt;Intel&lt;/strong&gt; IGP (Intel HD Graphics 530)&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;Discrete Graphics Device&lt;/strong&gt; is a &lt;strong&gt;NVIDIA&lt;/strong&gt; GPU (NVIDIA Quadro M1000M)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I didn't know that that the laptop had two graphics device when I chose the
laptop model. I discovered hybrid graphics when I started to debug graphics
issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bios"&gt;
&lt;h2&gt;BIOS&lt;/h2&gt;
&lt;p&gt;Hybrid graphics can be configured in the BIOS:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Discrete Graphics mode&lt;/strong&gt; will achieve higher graphics performances.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hybrid Graphics mode&lt;/strong&gt; (default) runs as Integrated Graphics mode to
achieve longer battery life, and Discrete Graphics is enabled on demand.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On my Lenovo P50, using the &lt;strong&gt;Discrete Graphics mode&lt;/strong&gt; removes &amp;quot;00:02.0 VGA
compatible controller: Intel Corporation HD Graphics 530&amp;quot; from &lt;tt class="docutils literal"&gt;lspci&lt;/tt&gt;
command output: the &lt;strong&gt;Intel IGP is fully disabled&lt;/strong&gt;. The Linux kernel only
sees the NVIDIA GPU.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="linux-kernel"&gt;
&lt;h2&gt;Linux kernel&lt;/h2&gt;
&lt;p&gt;On Linux, hybrid graphics is handled by &lt;strong&gt;vgaswitcheroo&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo cat /sys/kernel/debug/vgaswitcheroo/switch
0:IGD:+:Pwr:0000:00:02.0
1:DIS: :DynPwr:0000:01:00.0
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;IGD&lt;/tt&gt; stands for &lt;strong&gt;Integrated&lt;/strong&gt; Graphics Device&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;DIS&lt;/tt&gt; stands for &lt;strong&gt;DIScrete&lt;/strong&gt; Graphics Device&lt;/li&gt;
&lt;li&gt;&amp;quot;+&amp;quot; marks the &lt;strong&gt;active&lt;/strong&gt; card&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Pwr&lt;/tt&gt;: the graphics device is &lt;strong&gt;always active&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;DynPwr&lt;/tt&gt;: the graphics device is actived &lt;strong&gt;on demand&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last field (ex: &lt;tt class="docutils literal"&gt;0000:00:02.0&lt;/tt&gt;) is based on the PCI identifier:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ lspci|grep VGA
00:02.0 VGA compatible controller: Intel Corporation HD Graphics 530 (rev 06)
01:00.0 VGA compatible controller: NVIDIA Corporation GM107GLM [Quadro M1000M] (rev a2)
&lt;/pre&gt;
&lt;p&gt;On my laptop, hybrid graphics is detected by an &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Advanced_Configuration_and_Power_Interface"&gt;ACPI&lt;/a&gt;
&amp;quot;Device-Specific Method&amp;quot; (DSM):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ journalctl -b -k|grep 'VGA switcheroo'
Sep 11 02:29:54 apu kernel: VGA switcheroo: detected Optimus DSM method \_SB_.PCI0.PEG0.PEGP handle
&lt;/pre&gt;
&lt;p&gt;See: &lt;a class="reference external" href="https://www.kernel.org/doc/html/latest/gpu/vga-switcheroo.html"&gt;VGA Switcheroo (Linux kernel documentation)&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="opengl"&gt;
&lt;h2&gt;OpenGL&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Mesa_(computer_graphics)"&gt;Mesa&lt;/a&gt; provides
&lt;tt class="docutils literal"&gt;glxinfo&lt;/tt&gt; utility to get information about the OpenGL driver currently used:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ glxinfo|grep -E 'Device|direct rendering'
direct rendering: Yes
    Device: Mesa DRI Intel(R) HD Graphics 530 (Skylake GT2)  (0x191b)
&lt;/pre&gt;
&lt;p&gt;On this example, the discrete Intel IGP is used.&lt;/p&gt;
&lt;p&gt;In Firefox, go to &lt;strong&gt;about:support&lt;/strong&gt; page and search for the &lt;tt class="docutils literal"&gt;Graphics&lt;/tt&gt;
section to get information about compositing, WebGL, GPU, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="dri-prime-environment-variable"&gt;
&lt;h2&gt;DRI_PRIME environment variable&lt;/h2&gt;
&lt;p&gt;Set DRI_PRIME=1 environment variable to run an application with the
&lt;strong&gt;discrete&lt;/strong&gt; GPU.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ DRI_PRIME=1 glxinfo|grep -E 'Device|rendering'
direct rendering: Yes
    Device: NV117 (0x13b1)
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="switcheroo-control"&gt;
&lt;h2&gt;switcheroo-control&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/hadess/switcheroo-control"&gt;switcheroo-control&lt;/a&gt; is a
deamon controlling &lt;tt class="docutils literal"&gt;/sys/kernel/debug/vgaswitcheroo/switch&lt;/tt&gt; (Linux kernel).
It can be accessed by DBus.&lt;/p&gt;
&lt;p&gt;When the daemon starts, it looks for &lt;tt class="docutils literal"&gt;xdg.force_integrated=VALUE&lt;/tt&gt; parameter
in the Linux command line. If &lt;em&gt;VALUE&lt;/em&gt; is &lt;tt class="docutils literal"&gt;1&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;true&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;on&lt;/tt&gt;, or if
&lt;tt class="docutils literal"&gt;xdg.force_integrated=VALUE&lt;/tt&gt; is not found in the command line, the daemon
writes &lt;tt class="docutils literal"&gt;DIGD&lt;/tt&gt; into &lt;tt class="docutils literal"&gt;/sys/kernel/debug/vgaswitcheroo/switch&lt;/tt&gt; (delayed
&lt;strong&gt;switch to the integrated graphics device&lt;/strong&gt;: my Intel IGP)&lt;/p&gt;
&lt;p&gt;If &lt;tt class="docutils literal"&gt;xdg.force_integrated=0&lt;/tt&gt; is found in the command line, the daemon leaves
&lt;tt class="docutils literal"&gt;/sys/kernel/debug/vgaswitcheroo/switch&lt;/tt&gt; unchanged.&lt;/p&gt;
&lt;p&gt;systemd:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Check if the service is running: &lt;tt class="docutils literal"&gt;sudo systemctl status &lt;span class="pre"&gt;switcheroo-control.service&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Disable the service: &lt;tt class="docutils literal"&gt;sudo systemctl disable &lt;span class="pre"&gt;switcheroo-control.service&lt;/span&gt;&lt;/tt&gt;
and &lt;tt class="docutils literal"&gt;sudo systemctl stop &lt;span class="pre"&gt;switcheroo-control.service&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On Fedora, switcheroo-control is installed by default.&lt;/p&gt;
&lt;p&gt;It is unclear to me if this daemon is still useful for my setup. It seems like
the the Linux kernel switcheroo uses the integrated Intel IGP by default
anyway.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="disable-the-discrete-gpu-by-blacklisting-its-driver"&gt;
&lt;h2&gt;Disable the discrete GPU by blacklisting its driver&lt;/h2&gt;
&lt;p&gt;To debug graphical bugs, I wanted to ensure that the discrete NVIDIA GPU is
never used.&lt;/p&gt;
&lt;p&gt;I found the solution of fully disabling the nouveau driver in the Linux kernel:
add &lt;tt class="docutils literal"&gt;modprobe.blacklist=nouveau&lt;/tt&gt; to the Linux kernel command line. On Fedora,
you can use:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo grubby --update-kernel=ALL --args=&amp;quot;modprobe.blacklist=nouveau&amp;quot;
&lt;/pre&gt;
&lt;p&gt;To reenable nouveau, remove the parameter. On Fedora:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo grubby --update-kernel=ALL --remove-args=&amp;quot;modprobe.blacklist=nouveau&amp;quot;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="demo"&gt;
&lt;h2&gt;Demo!&lt;/h2&gt;
&lt;p&gt;For this test, my laptop is not connected to anything (no power cable, no
external monitor, no dock).&lt;/p&gt;
&lt;p&gt;When my laptop is idle (no 3D application is running), the NVIDIA GPU is
&lt;strong&gt;suspended&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ cat /sys/bus/pci/drivers/nouveau/0000\:01\:00.0/enable
0
$ cat /sys/bus/pci/drivers/nouveau/0000\:01\:00.0/power/runtime_status
suspended
&lt;/pre&gt;
&lt;p&gt;I explicitly run a 3D application on it:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
DRI_PRIME=1 glxgears
&lt;/pre&gt;
&lt;p&gt;The NVIDIA GPU becomes &lt;strong&gt;active&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ cat /sys/bus/pci/drivers/nouveau/0000\:01\:00.0/enable
2
$ cat /sys/bus/pci/drivers/nouveau/0000\:01\:00.0/power/runtime_status
active
&lt;/pre&gt;
&lt;p&gt;I stop the 3D application. A few seconds later, the NVIDIA GPU is &lt;strong&gt;suspended&lt;/strong&gt;
again:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ cat /sys/bus/pci/drivers/nouveau/0000\:01\:00.0/enable
0
$ cat /sys/bus/pci/drivers/nouveau/0000\:01\:00.0/power/runtime_status
suspended
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="graphics-devices-and-monitors"&gt;
&lt;h2&gt;Graphics devices and monitors&lt;/h2&gt;
&lt;p&gt;When I disabled the nouveau driver using &lt;tt class="docutils literal"&gt;modprobe.blacklist=nouveau&lt;/tt&gt; kernel
command line parameter, I was no longer able to use external monitors. I
understood that:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The &lt;strong&gt;Intel&lt;/strong&gt; IGP is connected to the &lt;strong&gt;internal&lt;/strong&gt; laptop screen&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;NVIDIA&lt;/strong&gt; GPU is connected to the &lt;strong&gt;external&lt;/strong&gt; monitors (DisplayPort
and HDMI ports)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When my laptop has &lt;strong&gt;no external monitor&lt;/strong&gt; connected, the &lt;strong&gt;discrete&lt;/strong&gt; NVIDIA
GPU is &lt;strong&gt;actived on demand&lt;/strong&gt; (suspended when idle)&lt;/p&gt;
&lt;p&gt;When I connect my laptop to &lt;strong&gt;two external monitors&lt;/strong&gt; (using my dock), the
&lt;strong&gt;discrete&lt;/strong&gt; NVIDIA GPU is &lt;strong&gt;always active&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ cat /sys/bus/pci/drivers/nouveau/0000\:01\:00.0/power/runtime_status
active
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="links"&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Hybrid_graphics"&gt;https://wiki.archlinux.org/index.php/Hybrid_graphics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.kernel.org/doc/html/latest/gpu/vga-switcheroo.html"&gt;https://www.kernel.org/doc/html/latest/gpu/vga-switcheroo.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/PRIME"&gt;https://wiki.archlinux.org/index.php/PRIME&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://help.ubuntu.com/community/HybridGraphics"&gt;https://help.ubuntu.com/community/HybridGraphics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Nvidia_Optimus"&gt;https://en.wikipedia.org/wiki/Nvidia_Optimus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/AMD_Hybrid_Graphics"&gt;https://en.wikipedia.org/wiki/AMD_Hybrid_Graphics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://nouveau.freedesktop.org/wiki/Optimus"&gt;https://nouveau.freedesktop.org/wiki/Optimus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="linux"></category><category term="linux"></category></entry></feed>